# Agenda for Golang

------

我们此次作业使用Cobra实现了终端的Agenda系统，主要包括以下功能：

- **登录**
- **登出**
- **注册**
- **删除账户**
- **查询用户**
- **创建会议**
- **增加会议参与者**
- **会议查询**
- **删除会议参与者**
- **取消会议**
- **退出会议**
- **清空会议**

#任务目标
        熟悉 go 命令行工具管理项目
        综合使用 go 的函数、数据结构与接口，编写一个简单命令行应用 agenda
        使用面向对象的思想设计程序，使得程序具有良好的结构命令，并能方便修改、扩展新的命令不会影响其他命令的代码
        项目部署在 Github 上，合适多人协作，特别是代码归并
        支持日志（原则上不使用debug调试程序）


#需求描述 

        业务需求：见后面附件
        功能需求： 设计一组命令完成 agenda 的管理，例如： 
        agenda help ：列出命令说明
        agenda register -uUserName --password pass -email=a@xxx.com ：注册用户
        agenda help register ：列出 register 命令的描述
        agenda cm ... : 创建一个会议
        原则上一个命令对应一个业务功能
        持久化要求： 
        使用 json 存储 User 和 Meeting 实体
        当前用户信息存储在 curUser.txt 中
        开发需求 
        团队：2-3人，一人作为 master 创建程序框架，其他人 fork 该项目，所有人同时开发。团队 不能少于 2 人
        时间：两周完成
        项目目录 
        cmd ：存放命令实现代码
        entity ：存放 User 和 Meeting 对象读写与处理逻辑
        其他目录 ： 自由添加
        日志服务 
        使用 log 包记录命令执行情况

#具体运行
        从github上下载到本地，在linux下的agenda-go-cli-master下运行go build然后在终端进入当前文件夹，使用./agenda-go-cli加上你所需要的操作命令便可以运行。（当然你需要完成Go语言的相关环境配置）
        
#运行指令和运行截图
        具体运行过程与实验要求截图可以参见我们的实验博客
[CSDN博客] :http://blog.csdn.net/qq_33689717/article/details/78403706/


